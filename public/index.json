[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536465600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536465600,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":["Tutorial"],"content":" Last year was a whirlwind full of exciting opportunities to travel and share my dual passions of food and statistics. When I resolved to eat healthier, my inner quant couldn’t resist the opportunity of using data to better achieve this goal. Therefore, I applied unsupervised machine learning to ease meal prep by grouping together recipes that shared similar ingredients. My data came from ingredients used in dishes uploaded to allrecipes.com, which as of May 2018 contained over 14,000 main meal dishes.\nSo, there was a lot of interest in how I collected this data–like the following text message:\n This article is me keeping true to my word, though I am actually dividing the topic into more than one post. Here will cover web scraping essentials with the rvest package in R, then I will follow-up with a post on using functional programming to scrape multiple pages.\nWhat is web scraping A website is essentially a collection of archived information–which incidentally makes it a rich data source. Headlines, comments, and metrics, like the weather, are stored on a site and can be gathered to respectively get a sense of newsworthy topics, opinions, and trends over time.\nThis data must be extracted from the site into an analyzable format. Rather than copy and paste information, web scraping can be used to directly accumulate content from a website.\n How does web scraping work A webpage can be uniquely identified by its URL (Uniform Resource Locator) , which is also associated with an HTML (Hypertext Markup Language) file. HTML files provide guidelines for producing content on a webpage, and you can always view the HTML document used to generate a webpage by right-clicking and selecting View Page Source.\n  If you are using a Google Chrome web browser, then a right-click and selection of Inspect opens the HTML document in the same window as the web page. The HTML document will open to the portion of the text associated with the area where you right-clicked. Hovering over the HTML will highlight corresponding portions on the page. If you desire to highlight a more granular piece of information on the web page, you can attempt to accomplish this by hovering over a line of HTML and clicking on the left triangular icon to drill down into the text.\n You don’t need to be fluent in HTML in order to webscrape. Just know that the information you want to analyze on a site is stored in an html file, and web scraping can be used to collect this information.\n Using patterns to extract information HTML helps to organize a page by indicating how text should be displayed–for instance in a header, list, or certain division of the page. Categorically similar information tends to be visually alike, making a website easier to navigate. For example, recipe ingredients may be presented as a list and stylized with a font or color to be distinguished from recipe instructions. Stylistic patterns designed to ease user experience can be exploited to easily detect and collect information of interest from a website.\nWhile HTML is responsible for structuring content on a webpage, CSS (Cascading Style Sheets) controls site aesthetics, like color scheme and fonts. Therefore, extracting categorically similar information from a site is easier if you know the HTML and CSS used to format the content.\n While HTML is responsible for structuring content on a webpage, CSS (Cascading Style Sheets) controls site aesthetics, like color scheme and fonts. Therefore, extracting categorically similar information from a site is easier if you know the HTML and CSS used to format the content.  You can figure out the HTML and CSS specifications for displaying content with the Google Chrome plugin Selector Gadget. Download Google Chrome if you haven’t already, and install the Selector Gadget Extension.\nHere is Selector Gadget’s description of itself:\n Selector Gadget is an open source Chrome Extension that makes CSS selector generation and discovery on complicated sites a breeze.\n After installing the extension, go to any page and launch it. A box will open in the bottom right of the website. Click on a page element that you would like your selector to match (it will turn green). SelectorGadget will then generate a minimal CSS selector for that element, and will highlight (yellow) everything that is matched by the selector. Now click on a highlighted element to remove it from the selector (red), or click on an unhighlighted element to add it to the selector. Through this process of selection and rejection, SelectorGadget helps you come up with the perfect CSS selector for your needs.\nAfter Selector Gadget has been downloaded, click on the Selector Gadget icon in the toolbar to enable it.\nIf I wanted to know the HTML/CSS associated with recipe ingredients on allrecipes.com, then clicking on one ingredient highlights it in green and other text with identical HTML/CSS in yellow.\n If the yellow encompasses information that is categorically dissimilar from what you want, then click on the extraneous region and the yellow will turn red. Repeatedly deselect areas until the only information that you want is highlighted in yellow.\n The css selector refers to HTML/CSS pattern used to format the text, and it can be found in the bottom right corner of the web browser. The css selector for ingredients is .recipe-print__container2 ul li.\n But what does this have to do with R? R has a package called rvest that is able to scrape data from a webpage if you provide it with the page’s URL and the relevant css selector.\nDownload R and preferably the RStudio IDE–if you haven’t already.\nThen, install Rvest\ninstall.packages(\u0026quot;rvest\u0026quot;) # load package library(rvest) ## Loading required package: xml2 # load tidyvers to gain access to the pipe %\u0026gt;% function library(tidyverse) ## ── Attaching packages ──────────────────── tidyverse 1.2.1 ── ## ✔ ggplot2 3.0.0 ✔ purrr 0.2.4 ## ✔ tibble 1.4.2 ✔ dplyr 0.7.5 ## ✔ tidyr 0.8.1 ✔ stringr 1.3.1 ## ✔ readr 1.1.1 ✔ forcats 0.3.0 ## ── Conflicts ─────────────────────── tidyverse_conflicts() ── ## ✖ dplyr::filter() masks stats::filter() ## ✖ readr::guess_encoding() masks rvest::guess_encoding() ## ✖ dplyr::lag() masks stats::lag() ## ✖ purrr::pluck() masks rvest::pluck() First, store the url to a variable\nweb_address \u0026lt;- \u0026quot;https://www.allrecipes.com/recipe/23600/worlds-best-lasagna/print/?recipeType=Recipe\u0026amp;servings=12\u0026amp;isMetric=false\u0026quot; Please note, that I chose to scrape ingredients from a print view of the recipe and that the URL is for this page. I chose to capture the css selector from this version of allrecipes.com because the print layout is minimal with less irrelevant information.\nTo scrape the data we will start with 2 functions\n read_html() to prepare the html for data extraction\n html_nodes() to extract data that matches the named css selector\n  ingredients \u0026lt;- read_html(web_address) %\u0026gt;% html_nodes(\u0026quot;.recipe-print__container2 ul li\u0026quot;) This output is a bit messy because it contains some of the HTML, so one more function is needed to simplify the output\n html_text() reduces output to only show content  read_html(web_address) %\u0026gt;% html_nodes(\u0026quot;.recipe-print__container2 ul li\u0026quot;) %\u0026gt;% html_text(trim = T)  ## [1] \u0026quot;1 pound sweet Italian sausage\u0026quot; ## [2] \u0026quot;3/4 pound lean ground beef\u0026quot; ## [3] \u0026quot;1/2 cup minced onion\u0026quot; ## [4] \u0026quot;2 cloves garlic, crushed\u0026quot; ## [5] \u0026quot;1 (28 ounce) can crushed tomatoes\u0026quot; ## [6] \u0026quot;2 (6 ounce) cans tomato paste\u0026quot; ## [7] \u0026quot;2 (6.5 ounce) cans canned tomato sauce\u0026quot; ## [8] \u0026quot;1/2 cup water\u0026quot; ## [9] \u0026quot;2 tablespoons white sugar\u0026quot; ## [10] \u0026quot;1 1/2 teaspoons dried basil leaves\u0026quot; ## [11] \u0026quot;1/2 teaspoon fennel seeds\u0026quot; ## [12] \u0026quot;1 teaspoon Italian seasoning\u0026quot; ## [13] \u0026quot;1 tablespoon salt\u0026quot; ## [14] \u0026quot;1/4 teaspoon ground black pepper\u0026quot; ## [15] \u0026quot;4 tablespoons chopped fresh parsley\u0026quot; ## [16] \u0026quot;12 lasagna noodles\u0026quot; ## [17] \u0026quot;16 ounces ricotta cheese\u0026quot; ## [18] \u0026quot;1 egg\u0026quot; ## [19] \u0026quot;1/2 teaspoon salt\u0026quot; ## [20] \u0026quot;3/4 pound mozzarella cheese, sliced\u0026quot; ## [21] \u0026quot;3/4 cup grated Parmesan cheese\u0026quot; Try changing the URL assigned to the web_address variable to see that this css selector can be used to extract ingredient information from any recipe page that is formatted for printing.\nHere are a few for you to get started with https://www.allrecipes.com/recipe/10813/best-chocolate-chip-cookies/print/?recipeType=Recipe\u0026amp;servings=24\u0026amp;isMetric=false\nhttps://www.allrecipes.com/recipe/15925/creamy-au-gratin-potatoes/print/?recipeType=Recipe\u0026amp;servings=4\u0026amp;isMetric=false\nBon Appetit!\nResources  Web Browsers  https://web.stanford.edu/class/msande91si/www-spr04/readings/week1/InternetWhitepaper.htm\n https://www.explainthatstuff.com/howthewebworks.html\n https://www.w3.org/TR/html401/intro/intro.html  HTML  https://www.quora.com/What-are-the-differences-between-HTML-XML-PHP-CSS-and-JavaScript-in-layman%E2%80%99s-terms-Is-it-possible-to-write-a-complex-website-code-successfully-by-using-just-1-of-those-languages\n https://www.johnhaydon.com/whats-difference-between-css-html-php/  Selector Gadge + Rvest  https://www.rstudio.com/resources/webinars/extracting-data-from-the-web-part-2/\n https://blog.rstudio.com/2014/11/24/rvest-easy-web-scraping-with-r/ https://cran.r-project.org/web/packages/rvest/vignettes/selectorgadget.html     ","date":1546646400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546646400,"objectID":"e2eec5c2e5ee648984901a806ec84eee","permalink":"/post/2018-12-24-scraping-the-web-without-learning-html/scraping-the-web-without-learning-html/","publishdate":"2019-01-05T00:00:00Z","relpermalink":"/post/2018-12-24-scraping-the-web-without-learning-html/scraping-the-web-without-learning-html/","section":"post","summary":"Last year was a whirlwind full of exciting opportunities to travel and share my dual passions of food and statistics. When I resolved to eat healthier, my inner quant couldn’t resist the opportunity of using data to better achieve this goal. Therefore, I applied unsupervised machine learning to ease meal prep by grouping together recipes that shared similar ingredients. My data came from ingredients used in dishes uploaded to allrecipes.","tags":null,"title":"Scraping the Web without Learning HTML","type":"post"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536465600,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":[],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483246800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483246800,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00-05:00","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":"","date":1461729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461729600,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"/project/external-project/","publishdate":"2016-04-27T00:00:00-04:00","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461729600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461729600,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"/project/internal-project/","publishdate":"2016-04-27T00:00:00-04:00","relpermalink":"/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["GA Cushen"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1441080000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441080000,"objectID":"d77fa4a74076ffcd7ca6c21cfc27a4b2","permalink":"/publication/person-re-id/","publishdate":"2015-09-01T00:00:00-04:00","relpermalink":"/publication/person-re-id/","section":"publication","summary":"Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.","tags":[],"title":"A Person Re-Identification System For Mobile Devices","type":"publication"},{"authors":["GA Cushen","MS Nixon"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1372651200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372651200,"objectID":"2b4d919e3cf73dfcd0063c88fe01cb00","permalink":"/publication/clothing-search/","publishdate":"2013-07-01T00:00:00-04:00","relpermalink":"/publication/clothing-search/","section":"publication","summary":"We present a mobile visual clothing search system whereby a smart phone user can either choose a social networking photo or take a new photo of a person wearing clothing of interest and search for similar clothing in a retail database. From the query image, the person is detected, clothing is segmented, and clothing features are extracted and quantized. The information is sent from the phone client to a server, where the feature vector of the query image is used to retrieve similar clothing products from online databases. The phone's GPS location is used to re-rank results by retail store location. State of the art work focuses primarily on the recognition of a diverse range of clothing offline and pays little attention to practical applications. Evaluated on a challenging dataset, the system is relatively fast and achieves promising results.","tags":[],"title":"Mobile visual clothing search","type":"publication"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]